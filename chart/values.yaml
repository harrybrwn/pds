replicaCount: 1

image:
  repository: harrybrwn/pds
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
# namespace: bskypds

config:
  logEnabled: 'true'
  # LOG_LEVEL can be one of:
  # - trace  10
  # - debug  20
  # - info   30
  # - warn   40
  # - error  50
  # - fatal  60
  # - silent
  # https://getpino.io/#/docs/api?id=logger-level
  logLevel: 'info'
  devMode: 'false'
  # hostname is required
  hostname: ""
  # required
  dataDirectory: ""
  # required
  adminPassword: {}
    # secretKeyRef:
    #   name: pds
    #   key: PDS_ADMIN_PASSWORD
  # Required
  jwtSecret: {}
    # secretKeyRef:
    #   name: pds
    #   key: PDS_JWT_SECRET
  # Required
  plcRotationKeyK256PrivateKeyHex: {}
    # secretKeyRef:
    #   name: pds
    #   key: PDS_PLC_ROTATION_KEY_K256_PRIVATE_KEY_HEX
  blobstore:
    s3: {}
      # bucket: pds-blobs
      # region: us-east-1
      # endpoint: "http://minio:9000"
      # forcePathStyle: 'true'
      # accessKeyId:
      #   secretKeyRef: {}
      # secretAccessKey:
      #   secretKeyRef: {}
      # uploadTimeoutMs: '20000'
    disk: {}
      # location: /pds/block
      # tmpLocation: /tmp/pds/block
  email: {}
    # from: "pds-admin@example.com"
    # smtpUrl:
    #   secretKeyRef:
    #     name: pds
    #     key: pds-email-url
  didPlcUrl: https://plc.directory
  crawlers:
    - https://bsky.network
  blobUploadLimit: '52428800'
  appView:
    url: 'https://api.bsky.app'
    did: 'did:web:api.bsky.app'
  reportService:
    url: https://mod.bsky.app
    did: did:plc:ar7c4by46qjdydhdevvrndac
  rateLimits: {}
    # enabled: false
    # bypassKey: '7a8512b26d4bece460a534d3ce5b62eb'
    # bypassIps:
    #   - 127.0.0.1
    #   - 192.168.1.25
  # fetchMaxResponseSize: '524288'
  # disableSsrfProtection: 'false'
  entryway: {}
    # url: ""
    # did: ""
    # jwtVerifyKeyK256PublicKeyHex: ""
    # plcRotationKey: ""
  proxy: {}
    # allowHTTP2: false
    # headersTimeout: 100
    # bodyTimeout: 3000
    # maxResponseSize: 524288
    # maxRetries: 0
    # preferCompressed: false
  didCache: {}
    # dbLocation: /pds/did-cache.sqlite
    # staleTTL: 120
    # maxTTL: 120
  # resolverTimeout:
  # recoveryDidKey:
  # serviceHandleDomains:
  # handleBackupNameservers:
  # enableDidDocWithSession:
  invite: {}
    # required: false
    # interval:
    # epoch:
  redis: {}
    # address: tcp://redis:6767
    # password:
    #   secretKeyRef:
    #     name: pds
    #     key: pds-redis-passwod
  actorStore: {}
    # directory: /pds/actors
    # cacheSize: 2048

envFrom: {}
  # - configMapRef:
  #     name: pds-env
  # - secretRef:
  #     name: pds-env

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3000

traefikIngress:
  enabled: false
  # tlsSecretName: ""

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

certificate: {}
  # secretName: bsky-tls-cert
  # issuerRef:
  #   name: ca-issuer
  #   kind: Issuer
  #   group: cert-manager.io # this is the default
  # subject:
  #   organizations: []
  #   organizationalUnits: [homelab]
  # nameConstraints:
  #   critical: true
  #   permitted:
  #     dnsDomains:
  #       - x.example.com

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 5
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3
  periodSeconds: 30
readinessProbe:
  httpGet:
    path: /xrpc/_health
    port: http
  initialDelaySeconds: 5
  timeoutSeconds: 2
  successThreshold: 1
  failureThreshold: 3
  periodSeconds: 30

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}
tolerations: []
affinity: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
